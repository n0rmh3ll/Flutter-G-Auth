// android/app/build.gradle  (Module-level)

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"      // Processes google-services.json
    id "dev.flutter.flutter-gradle-plugin"   // Flutter plugin
}

// Load keystore credentials from key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace    = "com.example.googleauth"
    compileSdk   = flutter.compileSdkVersion
    ndkVersion   = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.googleauth"
        minSdk        = flutter.minSdkVersion
        targetSdk     = flutter.targetSdkVersion
        versionCode   = flutter.versionCode
        versionName   = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            // Optional: enable Proguard
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Firebase BoM for aligned versions
    implementation platform('com.google.firebase:firebase-bom:32.2.0')

    // Firebase Authentication
    implementation 'com.google.firebase:firebase-auth'

    // Google Sign-In
    implementation 'com.google.android.gms:play-services-auth'
}

flutter {
    source = "../.."
}
